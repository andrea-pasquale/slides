{
  "version": 3,
  "sources": ["../../@vueuse/math/index.mjs"],
  "sourcesContent": ["import { computed, isReadonly, ref } from 'vue-demi';\nimport { toValue, clamp, reactify } from '@vueuse/shared';\n\nfunction createGenericProjection(fromDomain, toDomain, projector) {\n  return (input) => {\n    return computed(() => projector(toValue(input), toValue(fromDomain), toValue(toDomain)));\n  };\n}\n\nfunction defaultNumericProjector(input, from, to) {\n  return (input - from[0]) / (from[1] - from[0]) * (to[1] - to[0]) + to[0];\n}\nfunction createProjection(fromDomain, toDomain, projector = defaultNumericProjector) {\n  return createGenericProjection(fromDomain, toDomain, projector);\n}\n\nfunction logicAnd(...args) {\n  return computed(() => args.every((i) => toValue(i)));\n}\n\nfunction logicNot(v) {\n  return computed(() => !toValue(v));\n}\n\nfunction logicOr(...args) {\n  return computed(() => args.some((i) => toValue(i)));\n}\n\nfunction useAbs(value) {\n  return computed(() => Math.abs(toValue(value)));\n}\n\nfunction toValueArgsFlat(args) {\n  return args.flatMap((i) => {\n    const v = toValue(i);\n    if (Array.isArray(v))\n      return v.map((i2) => toValue(i2));\n    return [v];\n  });\n}\n\nfunction useAverage(...args) {\n  return computed(() => {\n    const array = toValueArgsFlat(args);\n    return array.reduce((sum, v) => sum += v, 0) / array.length;\n  });\n}\n\nfunction useCeil(value) {\n  return computed(() => Math.ceil(toValue(value)));\n}\n\nfunction useClamp(value, min, max) {\n  if (typeof value === \"function\" || isReadonly(value))\n    return computed(() => clamp(toValue(value), toValue(min), toValue(max)));\n  const _value = ref(value);\n  return computed({\n    get() {\n      return _value.value = clamp(_value.value, toValue(min), toValue(max));\n    },\n    set(value2) {\n      _value.value = clamp(value2, toValue(min), toValue(max));\n    }\n  });\n}\n\nfunction useFloor(value) {\n  return computed(() => Math.floor(toValue(value)));\n}\n\nfunction useMath(key, ...args) {\n  return reactify(Math[key])(...args);\n}\n\nfunction useMax(...args) {\n  return computed(() => {\n    const array = toValueArgsFlat(args);\n    return Math.max(...array);\n  });\n}\n\nfunction useMin(...args) {\n  return computed(() => {\n    const array = toValueArgsFlat(args);\n    return Math.min(...array);\n  });\n}\n\nfunction accurateMultiply(value, power) {\n  const valueStr = value.toString();\n  if (value > 0 && valueStr.includes(\".\")) {\n    const decimalPlaces = valueStr.split(\".\")[1].length;\n    const multiplier = 10 ** decimalPlaces;\n    return value * multiplier * power / multiplier;\n  } else {\n    return value * power;\n  }\n}\nfunction usePrecision(value, digits, options) {\n  return computed(() => {\n    var _a;\n    const _value = toValue(value);\n    const _digits = toValue(digits);\n    const power = 10 ** _digits;\n    return Math[((_a = toValue(options)) == null ? void 0 : _a.math) || \"round\"](accurateMultiply(_value, power)) / power;\n  });\n}\n\nfunction useProjection(input, fromDomain, toDomain, projector) {\n  return createProjection(fromDomain, toDomain, projector)(input);\n}\n\nfunction useRound(value) {\n  return computed(() => Math.round(toValue(value)));\n}\n\nfunction useSum(...args) {\n  return computed(() => toValueArgsFlat(args).reduce((sum, v) => sum += v, 0));\n}\n\nfunction useTrunc(value) {\n  return computed(() => Math.trunc(toValue(value)));\n}\n\nexport { logicAnd as and, createGenericProjection, createProjection, logicAnd, logicNot, logicOr, logicNot as not, logicOr as or, useAbs, useAverage, useCeil, useClamp, useFloor, useMath, useMax, useMin, usePrecision, useProjection, useRound, useSum, useTrunc };\n"],
  "mappings": "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",
  "names": []
}
