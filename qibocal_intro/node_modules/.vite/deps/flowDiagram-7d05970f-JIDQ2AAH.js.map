{
  "version": 3,
  "sources": ["../../.pnpm/d3-fetch@3.0.1/node_modules/d3-fetch/src/text.js", "../../.pnpm/d3-fetch@3.0.1/node_modules/d3-fetch/src/xml.js", "../../.pnpm/dagre-d3-es@7.0.10/node_modules/dagre-d3-es/src/dagre-js/arrows.js", "../../.pnpm/dagre-d3-es@7.0.10/node_modules/dagre-d3-es/src/dagre-js/label/add-svg-label.js", "../../.pnpm/dagre-d3-es@7.0.10/node_modules/dagre-d3-es/src/dagre-js/label/add-text-label.js", "../../.pnpm/dagre-d3-es@7.0.10/node_modules/dagre-d3-es/src/dagre-js/label/add-label.js", "../../.pnpm/dagre-d3-es@7.0.10/node_modules/dagre-d3-es/src/dagre-js/create-clusters.js", "../../.pnpm/dagre-d3-es@7.0.10/node_modules/dagre-d3-es/src/dagre-js/create-edge-labels.js", "../../.pnpm/dagre-d3-es@7.0.10/node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-node.js", "../../.pnpm/dagre-d3-es@7.0.10/node_modules/dagre-d3-es/src/dagre-js/create-edge-paths.js", "../../.pnpm/dagre-d3-es@7.0.10/node_modules/dagre-d3-es/src/dagre-js/create-nodes.js", "../../.pnpm/dagre-d3-es@7.0.10/node_modules/dagre-d3-es/src/dagre-js/position-clusters.js", "../../.pnpm/dagre-d3-es@7.0.10/node_modules/dagre-d3-es/src/dagre-js/position-edge-labels.js", "../../.pnpm/dagre-d3-es@7.0.10/node_modules/dagre-d3-es/src/dagre-js/position-nodes.js", "../../.pnpm/dagre-d3-es@7.0.10/node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-ellipse.js", "../../.pnpm/dagre-d3-es@7.0.10/node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-circle.js", "../../.pnpm/dagre-d3-es@7.0.10/node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-line.js", "../../.pnpm/dagre-d3-es@7.0.10/node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-polygon.js", "../../.pnpm/dagre-d3-es@7.0.10/node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-rect.js", "../../.pnpm/dagre-d3-es@7.0.10/node_modules/dagre-d3-es/src/dagre-js/shapes.js", "../../.pnpm/dagre-d3-es@7.0.10/node_modules/dagre-d3-es/src/dagre-js/render.js", "../../mermaid/src/diagrams/flowchart/flowChartShapes.js", "../../mermaid/src/diagrams/flowchart/flowRenderer.js", "../../mermaid/src/diagrams/flowchart/flowDiagram.ts"],
  "sourcesContent": ["function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n", "import text from \"./text.js\";\n\nfunction parser(type) {\n  return (input, init) => text(input, init)\n    .then(text => (new DOMParser).parseFromString(text, type));\n}\n\nexport default parser(\"application/xml\");\n\nexport var html = parser(\"text/html\");\n\nexport var svg = parser(\"image/svg+xml\");\n", "import * as util from './util.js';\n\nexport { arrows, setArrows };\n\nvar arrows = {\n  normal,\n  vee,\n  undirected,\n};\n\nfunction setArrows(value) {\n  arrows = value;\n}\n\nfunction normal(parent, id, edge, type) {\n  var marker = parent\n    .append('marker')\n    .attr('id', id)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 9)\n    .attr('refY', 5)\n    .attr('markerUnits', 'strokeWidth')\n    .attr('markerWidth', 8)\n    .attr('markerHeight', 6)\n    .attr('orient', 'auto');\n\n  var path = marker\n    .append('path')\n    .attr('d', 'M 0 0 L 10 5 L 0 10 z')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n  util.applyStyle(path, edge[type + 'Style']);\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class']);\n  }\n}\n\nfunction vee(parent, id, edge, type) {\n  var marker = parent\n    .append('marker')\n    .attr('id', id)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 9)\n    .attr('refY', 5)\n    .attr('markerUnits', 'strokeWidth')\n    .attr('markerWidth', 8)\n    .attr('markerHeight', 6)\n    .attr('orient', 'auto');\n\n  var path = marker\n    .append('path')\n    .attr('d', 'M 0 0 L 10 5 L 0 10 L 4 5 z')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n  util.applyStyle(path, edge[type + 'Style']);\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class']);\n  }\n}\n\nfunction undirected(parent, id, edge, type) {\n  var marker = parent\n    .append('marker')\n    .attr('id', id)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 9)\n    .attr('refY', 5)\n    .attr('markerUnits', 'strokeWidth')\n    .attr('markerWidth', 8)\n    .attr('markerHeight', 6)\n    .attr('orient', 'auto');\n\n  var path = marker\n    .append('path')\n    .attr('d', 'M 0 5 L 10 5')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n  util.applyStyle(path, edge[type + 'Style']);\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class']);\n  }\n}\n", "import * as util from '../util.js';\n\nexport { addSVGLabel };\n\nfunction addSVGLabel(root, node) {\n  var domNode = root;\n\n  domNode.node().appendChild(node.label);\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n", "import * as util from '../util.js';\n\nexport { addTextLabel };\n\n/*\n * Attaches a text label to the specified root. Handles escape sequences.\n */\nfunction addTextLabel(root, node) {\n  var domNode = root.append('text');\n\n  var lines = processEscapeSequences(node.label).split('\\n');\n  for (var i = 0; i < lines.length; i++) {\n    domNode\n      .append('tspan')\n      .attr('xml:space', 'preserve')\n      .attr('dy', '1em')\n      .attr('x', '1')\n      .text(lines[i]);\n  }\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n\nfunction processEscapeSequences(text) {\n  var newText = '';\n  var escaped = false;\n  var ch;\n  for (var i = 0; i < text.length; ++i) {\n    ch = text[i];\n    if (escaped) {\n      switch (ch) {\n        case 'n':\n          newText += '\\n';\n          break;\n        default:\n          newText += ch;\n      }\n      escaped = false;\n    } else if (ch === '\\\\') {\n      escaped = true;\n    } else {\n      newText += ch;\n    }\n  }\n  return newText;\n}\n", "import { addHtmlLabel } from './add-html-label.js';\nimport { addSVGLabel } from './add-svg-label.js';\nimport { addTextLabel } from './add-text-label.js';\n\nexport { addLabel };\n\nfunction addLabel(root, node, location) {\n  var label = node.label;\n  var labelSvg = root.append('g');\n\n  // Allow the label to be a string, a function that returns a DOM element, or\n  // a DOM element itself.\n  if (node.labelType === 'svg') {\n    addSVGLabel(labelSvg, node);\n  } else if (typeof label !== 'string' || node.labelType === 'html') {\n    addHtmlLabel(labelSvg, node);\n  } else {\n    addTextLabel(labelSvg, node);\n  }\n\n  var labelBBox = labelSvg.node().getBBox();\n  var y;\n  switch (location) {\n    case 'top':\n      y = -node.height / 2;\n      break;\n    case 'bottom':\n      y = node.height / 2 - labelBBox.height;\n      break;\n    default:\n      y = -labelBBox.height / 2;\n  }\n  labelSvg.attr('transform', 'translate(' + -labelBBox.width / 2 + ',' + y + ')');\n\n  return labelSvg;\n}\n", "import * as d3 from 'd3';\nimport { addLabel } from './label/add-label.js';\nimport * as util from './util.js';\n\nexport { createClusters, setCreateClusters };\n\nvar createClusters = function (selection, g) {\n  var clusters = g.nodes().filter(function (v) {\n    return util.isSubgraph(g, v);\n  });\n  var svgClusters = selection.selectAll('g.cluster').data(clusters, function (v) {\n    return v;\n  });\n\n  util.applyTransition(svgClusters.exit(), g).style('opacity', 0).remove();\n\n  var enterSelection = svgClusters\n    .enter()\n    .append('g')\n    .attr('class', 'cluster')\n    .attr('id', function (v) {\n      var node = g.node(v);\n      return node.id;\n    })\n    .style('opacity', 0)\n    .each(function (v) {\n      var node = g.node(v);\n      var thisGroup = d3.select(this);\n      d3.select(this).append('rect');\n      var labelGroup = thisGroup.append('g').attr('class', 'label');\n      addLabel(labelGroup, node, node.clusterLabelPos);\n    });\n\n  svgClusters = svgClusters.merge(enterSelection);\n\n  svgClusters = util.applyTransition(svgClusters, g).style('opacity', 1);\n\n  svgClusters.selectAll('rect').each(function (c) {\n    var node = g.node(c);\n    var domCluster = d3.select(this);\n    util.applyStyle(domCluster, node.style);\n  });\n\n  return svgClusters;\n};\n\nfunction setCreateClusters(value) {\n  createClusters = value;\n}\n", "import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport { addLabel } from './label/add-label.js';\nimport * as util from './util.js';\n\nexport { createEdgeLabels, setCreateEdgeLabels };\n\nlet createEdgeLabels = function (selection, g) {\n  var svgEdgeLabels = selection\n    .selectAll('g.edgeLabel')\n    .data(g.edges(), function (e) {\n      return util.edgeToId(e);\n    })\n    .classed('update', true);\n\n  svgEdgeLabels.exit().remove();\n  svgEdgeLabels.enter().append('g').classed('edgeLabel', true).style('opacity', 0);\n\n  svgEdgeLabels = selection.selectAll('g.edgeLabel');\n\n  svgEdgeLabels.each(function (e) {\n    var root = d3.select(this);\n    root.select('.label').remove();\n    var edge = g.edge(e);\n    var label = addLabel(root, g.edge(e), 0).classed('label', true);\n    var bbox = label.node().getBBox();\n\n    if (edge.labelId) {\n      label.attr('id', edge.labelId);\n    }\n    if (!_.has(edge, 'width')) {\n      edge.width = bbox.width;\n    }\n    if (!_.has(edge, 'height')) {\n      edge.height = bbox.height;\n    }\n  });\n\n  var exitSelection;\n\n  if (svgEdgeLabels.exit) {\n    exitSelection = svgEdgeLabels.exit();\n  } else {\n    exitSelection = svgEdgeLabels.selectAll(null); // empty selection\n  }\n\n  util.applyTransition(exitSelection, g).style('opacity', 0).remove();\n\n  return svgEdgeLabels;\n};\n\nfunction setCreateEdgeLabels(value) {\n  createEdgeLabels = value;\n}\n", "export { intersectNode };\n\nfunction intersectNode(node, point) {\n  return node.intersect(point);\n}\n", "import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport { intersectNode } from './intersect/intersect-node.js';\nimport * as util from './util.js';\n\nexport { createEdgePaths, setCreateEdgePaths };\n\nvar createEdgePaths = function (selection, g, arrows) {\n  var previousPaths = selection\n    .selectAll('g.edgePath')\n    .data(g.edges(), function (e) {\n      return util.edgeToId(e);\n    })\n    .classed('update', true);\n\n  var newPaths = enter(previousPaths, g);\n  exit(previousPaths, g);\n\n  var svgPaths = previousPaths.merge !== undefined ? previousPaths.merge(newPaths) : previousPaths;\n  util.applyTransition(svgPaths, g).style('opacity', 1);\n\n  // Save DOM element in the path group, and set ID and class\n  svgPaths.each(function (e) {\n    var domEdge = d3.select(this);\n    var edge = g.edge(e);\n    edge.elem = this;\n\n    if (edge.id) {\n      domEdge.attr('id', edge.id);\n    }\n\n    util.applyClass(\n      domEdge,\n      edge['class'],\n      (domEdge.classed('update') ? 'update ' : '') + 'edgePath'\n    );\n  });\n\n  svgPaths.selectAll('path.path').each(function (e) {\n    var edge = g.edge(e);\n    edge.arrowheadId = _.uniqueId('arrowhead');\n\n    var domEdge = d3\n      .select(this)\n      .attr('marker-end', function () {\n        return 'url(' + makeFragmentRef(location.href, edge.arrowheadId) + ')';\n      })\n      .style('fill', 'none');\n\n    util.applyTransition(domEdge, g).attr('d', function (e) {\n      return calcPoints(g, e);\n    });\n\n    util.applyStyle(domEdge, edge.style);\n  });\n\n  svgPaths.selectAll('defs *').remove();\n  svgPaths.selectAll('defs').each(function (e) {\n    var edge = g.edge(e);\n    var arrowhead = arrows[edge.arrowhead];\n    arrowhead(d3.select(this), edge.arrowheadId, edge, 'arrowhead');\n  });\n\n  return svgPaths;\n};\n\nfunction setCreateEdgePaths(value) {\n  createEdgePaths = value;\n}\n\nfunction makeFragmentRef(url, fragmentId) {\n  var baseUrl = url.split('#')[0];\n  return baseUrl + '#' + fragmentId;\n}\n\nfunction calcPoints(g, e) {\n  var edge = g.edge(e);\n  var tail = g.node(e.v);\n  var head = g.node(e.w);\n  var points = edge.points.slice(1, edge.points.length - 1);\n  points.unshift(intersectNode(tail, points[0]));\n  points.push(intersectNode(head, points[points.length - 1]));\n\n  return createLine(edge, points);\n}\n\nfunction createLine(edge, points) {\n  // @ts-expect-error\n  var line = (d3.line || d3.svg.line)()\n    .x(function (d) {\n      return d.x;\n    })\n    .y(function (d) {\n      return d.y;\n    });\n\n  (line.curve || line.interpolate)(edge.curve);\n\n  return line(points);\n}\n\nfunction getCoords(elem) {\n  var bbox = elem.getBBox();\n  var matrix = elem.ownerSVGElement\n    .getScreenCTM()\n    .inverse()\n    .multiply(elem.getScreenCTM())\n    .translate(bbox.width / 2, bbox.height / 2);\n  return { x: matrix.e, y: matrix.f };\n}\n\nfunction enter(svgPaths, g) {\n  var svgPathsEnter = svgPaths.enter().append('g').attr('class', 'edgePath').style('opacity', 0);\n  svgPathsEnter\n    .append('path')\n    .attr('class', 'path')\n    .attr('d', function (e) {\n      var edge = g.edge(e);\n      var sourceElem = g.node(e.v).elem;\n      var points = _.range(edge.points.length).map(function () {\n        return getCoords(sourceElem);\n      });\n      return createLine(edge, points);\n    });\n  svgPathsEnter.append('defs');\n  return svgPathsEnter;\n}\n\nfunction exit(svgPaths, g) {\n  var svgPathExit = svgPaths.exit();\n  util.applyTransition(svgPathExit, g).style('opacity', 0).remove();\n}\n", "import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport { addLabel } from './label/add-label.js';\nimport * as util from './util.js';\n\nexport { createNodes, setCreateNodes };\n\nvar createNodes = function (selection, g, shapes) {\n  var simpleNodes = g.nodes().filter(function (v) {\n    return !util.isSubgraph(g, v);\n  });\n  var svgNodes = selection\n    .selectAll('g.node')\n    .data(simpleNodes, function (v) {\n      return v;\n    })\n    .classed('update', true);\n\n  svgNodes.exit().remove();\n\n  svgNodes.enter().append('g').attr('class', 'node').style('opacity', 0);\n\n  svgNodes = selection.selectAll('g.node');\n\n  svgNodes.each(function (v) {\n    var node = g.node(v);\n    var thisGroup = d3.select(this);\n    util.applyClass(\n      thisGroup,\n      node['class'],\n      (thisGroup.classed('update') ? 'update ' : '') + 'node'\n    );\n\n    thisGroup.select('g.label').remove();\n    var labelGroup = thisGroup.append('g').attr('class', 'label');\n    var labelDom = addLabel(labelGroup, node);\n    var shape = shapes[node.shape];\n    var bbox = _.pick(labelDom.node().getBBox(), 'width', 'height');\n\n    node.elem = this;\n\n    if (node.id) {\n      thisGroup.attr('id', node.id);\n    }\n    if (node.labelId) {\n      labelGroup.attr('id', node.labelId);\n    }\n\n    if (_.has(node, 'width')) {\n      bbox.width = node.width;\n    }\n    if (_.has(node, 'height')) {\n      bbox.height = node.height;\n    }\n\n    bbox.width += node.paddingLeft + node.paddingRight;\n    bbox.height += node.paddingTop + node.paddingBottom;\n    labelGroup.attr(\n      'transform',\n      'translate(' +\n        (node.paddingLeft - node.paddingRight) / 2 +\n        ',' +\n        (node.paddingTop - node.paddingBottom) / 2 +\n        ')'\n    );\n\n    var root = d3.select(this);\n    root.select('.label-container').remove();\n    var shapeSvg = shape(root, bbox, node).classed('label-container', true);\n    util.applyStyle(shapeSvg, node.style);\n\n    var shapeBBox = shapeSvg.node().getBBox();\n    node.width = shapeBBox.width;\n    node.height = shapeBBox.height;\n  });\n\n  var exitSelection;\n\n  if (svgNodes.exit) {\n    exitSelection = svgNodes.exit();\n  } else {\n    exitSelection = svgNodes.selectAll(null); // empty selection\n  }\n\n  util.applyTransition(exitSelection, g).style('opacity', 0).remove();\n\n  return svgNodes;\n};\n\nfunction setCreateNodes(value) {\n  createNodes = value;\n}\n", "import * as d3 from 'd3';\nimport * as util from './util.js';\n\nexport { positionClusters };\n\nfunction positionClusters(selection, g) {\n  var created = selection.filter(function () {\n    return !d3.select(this).classed('update');\n  });\n\n  function translate(v) {\n    var node = g.node(v);\n    return 'translate(' + node.x + ',' + node.y + ')';\n  }\n\n  created.attr('transform', translate);\n\n  util.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n\n  util\n    .applyTransition(created.selectAll('rect'), g)\n    .attr('width', function (v) {\n      return g.node(v).width;\n    })\n    .attr('height', function (v) {\n      return g.node(v).height;\n    })\n    .attr('x', function (v) {\n      var node = g.node(v);\n      return -node.width / 2;\n    })\n    .attr('y', function (v) {\n      var node = g.node(v);\n      return -node.height / 2;\n    });\n}\n", "import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { positionEdgeLabels };\n\nfunction positionEdgeLabels(selection, g) {\n  var created = selection.filter(function () {\n    return !d3.select(this).classed('update');\n  });\n\n  function translate(e) {\n    var edge = g.edge(e);\n    return _.has(edge, 'x') ? 'translate(' + edge.x + ',' + edge.y + ')' : '';\n  }\n\n  created.attr('transform', translate);\n\n  util.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n}\n", "import * as d3 from 'd3';\nimport * as util from './util.js';\n\nexport { positionNodes };\n\nfunction positionNodes(selection, g) {\n  var created = selection.filter(function () {\n    return !d3.select(this).classed('update');\n  });\n\n  function translate(v) {\n    var node = g.node(v);\n    return 'translate(' + node.x + ',' + node.y + ')';\n  }\n\n  created.attr('transform', translate);\n\n  util.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n}\n", "export { intersectEllipse };\n\nfunction intersectEllipse(node, rx, ry, point) {\n  // Formulae from: http://mathworld.wolfram.com/Ellipse-LineIntersection.html\n\n  var cx = node.x;\n  var cy = node.y;\n\n  var px = cx - point.x;\n  var py = cy - point.y;\n\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n\n  var dx = Math.abs((rx * ry * px) / det);\n  if (point.x < cx) {\n    dx = -dx;\n  }\n  var dy = Math.abs((rx * ry * py) / det);\n  if (point.y < cy) {\n    dy = -dy;\n  }\n\n  return { x: cx + dx, y: cy + dy };\n}\n", "import { intersectEllipse } from './intersect-ellipse.js';\n\nexport { intersectCircle };\n\nfunction intersectCircle(node, rx, point) {\n  return intersectEllipse(node, rx, rx, point);\n}\n", "export { intersectLine };\n\n/*\n * Returns the point at which two lines, p and q, intersect or returns\n * undefined if they do not intersect.\n */\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2, r3, r4;\n  var denom, offset, num;\n  var x, y;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = p2.x * p1.y - p1.x * p2.y;\n\n  // Compute r3 and r4.\n  r3 = a1 * q1.x + b1 * q1.y + c1;\n  r4 = a1 * q2.x + b1 * q2.y + c1;\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if (r3 !== 0 && r4 !== 0 && sameSign(r3, r4)) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = q2.x * q1.y - q1.x * q2.y;\n\n  // Compute r1 and r2\n  r1 = a2 * p1.x + b2 * p1.y + c2;\n  r2 = a2 * p2.x + b2 * p2.y + c2;\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if (r1 !== 0 && r2 !== 0 && sameSign(r1, r2)) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Line segments intersect: compute intersection point.\n  denom = a1 * b2 - a2 * b1;\n  if (denom === 0) {\n    return /*COLLINEAR*/;\n  }\n\n  offset = Math.abs(denom / 2);\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  num = b1 * c2 - b2 * c1;\n  x = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  num = a2 * c1 - a1 * c2;\n  y = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  return { x: x, y: y };\n}\n\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n", "import { intersectLine } from './intersect-line.js';\n\nexport { intersectPolygon };\n\n/*\n * Returns the point ({x, y}) at which the point argument intersects with the\n * node argument assuming that it has the shape specified by polygon.\n */\nfunction intersectPolygon(node, polyPoints, point) {\n  var x1 = node.x;\n  var y1 = node.y;\n\n  var intersections = [];\n\n  var minX = Number.POSITIVE_INFINITY;\n  var minY = Number.POSITIVE_INFINITY;\n  polyPoints.forEach(function (entry) {\n    minX = Math.min(minX, entry.x);\n    minY = Math.min(minY, entry.y);\n  });\n\n  var left = x1 - node.width / 2 - minX;\n  var top = y1 - node.height / 2 - minY;\n\n  for (var i = 0; i < polyPoints.length; i++) {\n    var p1 = polyPoints[i];\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n    var intersect = intersectLine(\n      node,\n      point,\n      { x: left + p1.x, y: top + p1.y },\n      { x: left + p2.x, y: top + p2.y }\n    );\n    if (intersect) {\n      intersections.push(intersect);\n    }\n  }\n\n  if (!intersections.length) {\n    console.log('NO INTERSECTION FOUND, RETURN NODE CENTER', node);\n    return node;\n  }\n\n  if (intersections.length > 1) {\n    // More intersections, find the one nearest to edge end point\n    intersections.sort(function (p, q) {\n      var pdx = p.x - point.x;\n      var pdy = p.y - point.y;\n      var distp = Math.sqrt(pdx * pdx + pdy * pdy);\n\n      var qdx = q.x - point.x;\n      var qdy = q.y - point.y;\n      var distq = Math.sqrt(qdx * qdx + qdy * qdy);\n\n      return distp < distq ? -1 : distp === distq ? 0 : 1;\n    });\n  }\n  return intersections[0];\n}\n", "export { intersectRect };\n\nfunction intersectRect(node, point) {\n  var x = node.x;\n  var y = node.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = node.width / 2;\n  var h = node.height / 2;\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = dy === 0 ? 0 : (h * dx) / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = dx === 0 ? 0 : (w * dy) / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n", "import { intersectCircle } from './intersect/intersect-circle.js';\nimport { intersectEllipse } from './intersect/intersect-ellipse.js';\nimport { intersectPolygon } from './intersect/intersect-polygon.js';\nimport { intersectRect } from './intersect/intersect-rect.js';\n\nexport { shapes, setShapes };\n\nvar shapes = {\n  rect,\n  ellipse,\n  circle,\n  diamond,\n};\n\nfunction setShapes(value) {\n  shapes = value;\n}\n\nfunction rect(parent, bbox, node) {\n  var shapeSvg = parent\n    .insert('rect', ':first-child')\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('x', -bbox.width / 2)\n    .attr('y', -bbox.height / 2)\n    .attr('width', bbox.width)\n    .attr('height', bbox.height);\n\n  node.intersect = function (point) {\n    return intersectRect(node, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction ellipse(parent, bbox, node) {\n  var rx = bbox.width / 2;\n  var ry = bbox.height / 2;\n  var shapeSvg = parent\n    .insert('ellipse', ':first-child')\n    .attr('x', -bbox.width / 2)\n    .attr('y', -bbox.height / 2)\n    .attr('rx', rx)\n    .attr('ry', ry);\n\n  node.intersect = function (point) {\n    return intersectEllipse(node, rx, ry, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction circle(parent, bbox, node) {\n  var r = Math.max(bbox.width, bbox.height) / 2;\n  var shapeSvg = parent\n    .insert('circle', ':first-child')\n    .attr('x', -bbox.width / 2)\n    .attr('y', -bbox.height / 2)\n    .attr('r', r);\n\n  node.intersect = function (point) {\n    return intersectCircle(node, r, point);\n  };\n\n  return shapeSvg;\n}\n\n// Circumscribe an ellipse for the bounding box with a diamond shape. I derived\n// the function to calculate the diamond shape from:\n// http://mathforum.org/kb/message.jspa?messageID=3750236\nfunction diamond(parent, bbox, node) {\n  var w = (bbox.width * Math.SQRT2) / 2;\n  var h = (bbox.height * Math.SQRT2) / 2;\n  var points = [\n    { x: 0, y: -h },\n    { x: -w, y: 0 },\n    { x: 0, y: h },\n    { x: w, y: 0 },\n  ];\n  var shapeSvg = parent.insert('polygon', ':first-child').attr(\n    'points',\n    points\n      .map(function (p) {\n        return p.x + ',' + p.y;\n      })\n      .join(' ')\n  );\n\n  node.intersect = function (p) {\n    return intersectPolygon(node, points, p);\n  };\n\n  return shapeSvg;\n}\n", "import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport { layout } from '../dagre/index.js';\nimport { arrows, setArrows } from './arrows.js';\nimport { createClusters, setCreateClusters } from './create-clusters.js';\nimport { createEdgeLabels, setCreateEdgeLabels } from './create-edge-labels.js';\nimport { createEdgePaths, setCreateEdgePaths } from './create-edge-paths.js';\nimport { createNodes, setCreateNodes } from './create-nodes.js';\nimport { positionClusters } from './position-clusters.js';\nimport { positionEdgeLabels } from './position-edge-labels.js';\nimport { positionNodes } from './position-nodes.js';\nimport { shapes, setShapes } from './shapes.js';\n\nexport { render };\n\n// This design is based on http://bost.ocks.org/mike/chart/.\nfunction render() {\n  var fn = function (svg, g) {\n    preProcessGraph(g);\n\n    var outputGroup = createOrSelectGroup(svg, 'output');\n    var clustersGroup = createOrSelectGroup(outputGroup, 'clusters');\n    var edgePathsGroup = createOrSelectGroup(outputGroup, 'edgePaths');\n    var edgeLabels = createEdgeLabels(createOrSelectGroup(outputGroup, 'edgeLabels'), g);\n    var nodes = createNodes(createOrSelectGroup(outputGroup, 'nodes'), g, shapes);\n\n    layout(g);\n\n    positionNodes(nodes, g);\n    positionEdgeLabels(edgeLabels, g);\n    createEdgePaths(edgePathsGroup, g, arrows);\n\n    var clusters = createClusters(clustersGroup, g);\n    positionClusters(clusters, g);\n\n    postProcessGraph(g);\n  };\n\n  fn.createNodes = function (value) {\n    if (!arguments.length) return createNodes;\n    setCreateNodes(value);\n    return fn;\n  };\n\n  fn.createClusters = function (value) {\n    if (!arguments.length) return createClusters;\n    setCreateClusters(value);\n    return fn;\n  };\n\n  fn.createEdgeLabels = function (value) {\n    if (!arguments.length) return createEdgeLabels;\n    setCreateEdgeLabels(value);\n    return fn;\n  };\n\n  fn.createEdgePaths = function (value) {\n    if (!arguments.length) return createEdgePaths;\n    setCreateEdgePaths(value);\n    return fn;\n  };\n\n  fn.shapes = function (value) {\n    if (!arguments.length) return shapes;\n    setShapes(value);\n    return fn;\n  };\n\n  fn.arrows = function (value) {\n    if (!arguments.length) return arrows;\n    setArrows(value);\n    return fn;\n  };\n\n  return fn;\n}\n\nvar NODE_DEFAULT_ATTRS = {\n  paddingLeft: 10,\n  paddingRight: 10,\n  paddingTop: 10,\n  paddingBottom: 10,\n  rx: 0,\n  ry: 0,\n  shape: 'rect',\n};\n\nvar EDGE_DEFAULT_ATTRS = {\n  arrowhead: 'normal',\n  curve: d3.curveLinear,\n};\n\nfunction preProcessGraph(g) {\n  g.nodes().forEach(function (v) {\n    var node = g.node(v);\n    if (!_.has(node, 'label') && !g.children(v).length) {\n      node.label = v;\n    }\n\n    if (_.has(node, 'paddingX')) {\n      _.defaults(node, {\n        paddingLeft: node.paddingX,\n        paddingRight: node.paddingX,\n      });\n    }\n\n    if (_.has(node, 'paddingY')) {\n      _.defaults(node, {\n        paddingTop: node.paddingY,\n        paddingBottom: node.paddingY,\n      });\n    }\n\n    if (_.has(node, 'padding')) {\n      _.defaults(node, {\n        paddingLeft: node.padding,\n        paddingRight: node.padding,\n        paddingTop: node.padding,\n        paddingBottom: node.padding,\n      });\n    }\n\n    _.defaults(node, NODE_DEFAULT_ATTRS);\n\n    _.each(['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom'], function (k) {\n      node[k] = Number(node[k]);\n    });\n\n    // Save dimensions for restore during post-processing\n    if (_.has(node, 'width')) {\n      node._prevWidth = node.width;\n    }\n    if (_.has(node, 'height')) {\n      node._prevHeight = node.height;\n    }\n  });\n\n  g.edges().forEach(function (e) {\n    var edge = g.edge(e);\n    if (!_.has(edge, 'label')) {\n      edge.label = '';\n    }\n    _.defaults(edge, EDGE_DEFAULT_ATTRS);\n  });\n}\n\nfunction postProcessGraph(g) {\n  _.each(g.nodes(), function (v) {\n    var node = g.node(v);\n\n    // Restore original dimensions\n    if (_.has(node, '_prevWidth')) {\n      node.width = node._prevWidth;\n    } else {\n      delete node.width;\n    }\n\n    if (_.has(node, '_prevHeight')) {\n      node.height = node._prevHeight;\n    } else {\n      delete node.height;\n    }\n\n    delete node._prevWidth;\n    delete node._prevHeight;\n  });\n}\n\nfunction createOrSelectGroup(root, name) {\n  var selection = root.select('g.' + name);\n  if (selection.empty()) {\n    selection = root.append('g').attr('class', name);\n  }\n  return selection;\n}\n", "import { intersectPolygon } from 'dagre-d3-es/src/dagre-js/intersect/intersect-polygon.js';\nimport { intersectRect } from 'dagre-d3-es/src/dagre-js/intersect/intersect-rect.js';\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction question(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const s = (w + h) * 0.9;\n  const points = [\n    { x: s / 2, y: 0 },\n    { x: s, y: -s / 2 },\n    { x: s / 2, y: -s },\n    { x: 0, y: -s / 2 },\n  ];\n  const shapeSvg = insertPolygonShape(parent, s, s, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction hexagon(parent, bbox, node) {\n  const f = 4;\n  const h = bbox.height;\n  const m = h / f;\n  const w = bbox.width + 2 * m;\n  const points = [\n    { x: m, y: 0 },\n    { x: w - m, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w - m, y: -h },\n    { x: m, y: -h },\n    { x: 0, y: -h / 2 },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction rect_left_inv_arrow(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: -h / 2, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: -h / 2, y: -h },\n    { x: 0, y: -h / 2 },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction lean_right(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: (-2 * h) / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + (2 * h) / 6, y: -h },\n    { x: h / 6, y: -h },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction lean_left(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: (2 * h) / 6, y: 0 },\n    { x: w + h / 6, y: 0 },\n    { x: w - (2 * h) / 6, y: -h },\n    { x: -h / 6, y: -h },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction trapezoid(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: (-2 * h) / 6, y: 0 },\n    { x: w + (2 * h) / 6, y: 0 },\n    { x: w - h / 6, y: -h },\n    { x: h / 6, y: -h },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction inv_trapezoid(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: h / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + (2 * h) / 6, y: -h },\n    { x: (-2 * h) / 6, y: -h },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction rect_right_inv_arrow(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w + h / 2, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w + h / 2, y: -h },\n    { x: 0, y: -h },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction stadium(parent, bbox, node) {\n  const h = bbox.height;\n  const w = bbox.width + h / 4;\n\n  const shapeSvg = parent\n    .insert('rect', ':first-child')\n    .attr('rx', h / 2)\n    .attr('ry', h / 2)\n    .attr('x', -w / 2)\n    .attr('y', -h / 2)\n    .attr('width', w)\n    .attr('height', h);\n\n  node.intersect = function (point) {\n    return intersectRect(node, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction subroutine(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: 0, y: -h },\n    { x: 0, y: 0 },\n    { x: -8, y: 0 },\n    { x: w + 8, y: 0 },\n    { x: w + 8, y: -h },\n    { x: -8, y: -h },\n    { x: -8, y: 0 },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction cylinder(parent, bbox, node) {\n  const w = bbox.width;\n  const rx = w / 2;\n  const ry = rx / (2.5 + w / 50);\n  const h = bbox.height + ry;\n\n  const shape =\n    'M 0,' +\n    ry +\n    ' a ' +\n    rx +\n    ',' +\n    ry +\n    ' 0,0,0 ' +\n    w +\n    ' 0 a ' +\n    rx +\n    ',' +\n    ry +\n    ' 0,0,0 ' +\n    -w +\n    ' 0 l 0,' +\n    h +\n    ' a ' +\n    rx +\n    ',' +\n    ry +\n    ' 0,0,0 ' +\n    w +\n    ' 0 l 0,' +\n    -h;\n\n  const shapeSvg = parent\n    .attr('label-offset-y', ry)\n    .insert('path', ':first-child')\n    .attr('d', shape)\n    .attr('transform', 'translate(' + -w / 2 + ',' + -(h / 2 + ry) + ')');\n\n  node.intersect = function (point) {\n    const pos = intersectRect(node, point);\n    const x = pos.x - node.x;\n\n    if (\n      rx != 0 &&\n      (Math.abs(x) < node.width / 2 ||\n        (Math.abs(x) == node.width / 2 && Math.abs(pos.y - node.y) > node.height / 2 - ry))\n    ) {\n      // ellipsis equation: x*x / a*a + y*y / b*b = 1\n      // solve for y to get adjusted value for pos.y\n      let y = ry * ry * (1 - (x * x) / (rx * rx));\n      if (y != 0) {\n        y = Math.sqrt(y);\n      }\n      y = ry - y;\n      if (point.y - node.y > 0) {\n        y = -y;\n      }\n\n      pos.y += y;\n    }\n\n    return pos;\n  };\n\n  return shapeSvg;\n}\n\n/** @param render */\nexport function addToRender(render) {\n  render.shapes().question = question;\n  render.shapes().hexagon = hexagon;\n  render.shapes().stadium = stadium;\n  render.shapes().subroutine = subroutine;\n  render.shapes().cylinder = cylinder;\n\n  // Add custom shape for box with inverted arrow on left side\n  render.shapes().rect_left_inv_arrow = rect_left_inv_arrow;\n\n  // Add custom shape for box with inverted arrow on left side\n  render.shapes().lean_right = lean_right;\n\n  // Add custom shape for box with inverted arrow on left side\n  render.shapes().lean_left = lean_left;\n\n  // Add custom shape for box with inverted arrow on left side\n  render.shapes().trapezoid = trapezoid;\n\n  // Add custom shape for box with inverted arrow on left side\n  render.shapes().inv_trapezoid = inv_trapezoid;\n\n  // Add custom shape for box with inverted arrow on right side\n  render.shapes().rect_right_inv_arrow = rect_right_inv_arrow;\n}\n\n/** @param addShape */\nexport function addToRenderV2(addShape) {\n  addShape({ question });\n  addShape({ hexagon });\n  addShape({ stadium });\n  addShape({ subroutine });\n  addShape({ cylinder });\n\n  // Add custom shape for box with inverted arrow on left side\n  addShape({ rect_left_inv_arrow });\n\n  // Add custom shape for box with inverted arrow on left side\n  addShape({ lean_right });\n\n  // Add custom shape for box with inverted arrow on left side\n  addShape({ lean_left });\n\n  // Add custom shape for box with inverted arrow on left side\n  addShape({ trapezoid });\n\n  // Add custom shape for box with inverted arrow on left side\n  addShape({ inv_trapezoid });\n\n  // Add custom shape for box with inverted arrow on right side\n  addShape({ rect_right_inv_arrow });\n}\n\n/**\n * @param parent\n * @param w\n * @param h\n * @param points\n */\nfunction insertPolygonShape(parent, w, h, points) {\n  return parent\n    .insert('polygon', ':first-child')\n    .attr(\n      'points',\n      points\n        .map(function (d) {\n          return d.x + ',' + d.y;\n        })\n        .join(' ')\n    )\n    .attr('transform', 'translate(' + -w / 2 + ',' + h / 2 + ')');\n}\n\nexport default {\n  addToRender,\n  addToRenderV2,\n};\n", "import * as graphlib from 'dagre-d3-es/src/graphlib/index.js';\nimport { select, curveLinear, selectAll } from 'd3';\nimport { getConfig } from '../../config';\nimport { render as Render } from 'dagre-d3-es';\nimport { applyStyle } from 'dagre-d3-es/src/dagre-js/util.js';\nimport { addHtmlLabel } from 'dagre-d3-es/src/dagre-js/label/add-html-label.js';\nimport { log } from '../../logger';\nimport common, { evaluate } from '../common/common';\nimport { interpolateToCurve, getStylesFromArray } from '../../utils';\nimport { setupGraphViewbox } from '../../setupGraphViewbox';\nimport flowChartShapes from './flowChartShapes';\n\nconst conf = {};\nexport const setConf = function (cnf) {\n  const keys = Object.keys(cnf);\n  for (const key of keys) {\n    conf[key] = cnf[key];\n  }\n};\n\n/**\n * Function that adds the vertices found in the graph definition to the graph to be rendered.\n *\n * @param vert Object containing the vertices.\n * @param g The graph that is to be drawn.\n * @param svgId\n * @param root\n * @param _doc\n * @param diagObj\n */\nexport const addVertices = function (vert, g, svgId, root, _doc, diagObj) {\n  const svg = !root ? select(`[id=\"${svgId}\"]`) : root.select(`[id=\"${svgId}\"]`);\n  const doc = !_doc ? document : _doc;\n  const keys = Object.keys(vert);\n\n  // Iterate through each item in the vertex object (containing all the vertices found) in the graph definition\n  keys.forEach(function (id) {\n    const vertex = vert[id];\n\n    /**\n     * Variable for storing the classes for the vertex\n     *\n     * @type {string}\n     */\n    let classStr = 'default';\n    if (vertex.classes.length > 0) {\n      classStr = vertex.classes.join(' ');\n    }\n\n    const styles = getStylesFromArray(vertex.styles);\n\n    // Use vertex id as text in the box if no text is provided by the graph definition\n    let vertexText = vertex.text !== undefined ? vertex.text : vertex.id;\n\n    // We create a SVG label, either by delegating to addHtmlLabel or manually\n    let vertexNode;\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\n      // TODO: addHtmlLabel accepts a labelStyle. Do we possibly have that?\n      const node = {\n        label: vertexText.replace(\n          /fa[blrs]?:fa-[\\w-]+/g,\n          (s) => `<i class='${s.replace(':', ' ')}'></i>`\n        ),\n      };\n      vertexNode = addHtmlLabel(svg, node).node();\n      vertexNode.parentNode.removeChild(vertexNode);\n    } else {\n      const svgLabel = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n      svgLabel.setAttribute('style', styles.labelStyle.replace('color:', 'fill:'));\n\n      const rows = vertexText.split(common.lineBreakRegex);\n\n      for (const row of rows) {\n        const tspan = doc.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n        tspan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        tspan.setAttribute('dy', '1em');\n        tspan.setAttribute('x', '1');\n        tspan.textContent = row;\n        svgLabel.appendChild(tspan);\n      }\n      vertexNode = svgLabel;\n    }\n\n    let radious = 0;\n    let _shape = '';\n    // Set the shape based parameters\n    switch (vertex.type) {\n      case 'round':\n        radious = 5;\n        _shape = 'rect';\n        break;\n      case 'square':\n        _shape = 'rect';\n        break;\n      case 'diamond':\n        _shape = 'question';\n        break;\n      case 'hexagon':\n        _shape = 'hexagon';\n        break;\n      case 'odd':\n        _shape = 'rect_left_inv_arrow';\n        break;\n      case 'lean_right':\n        _shape = 'lean_right';\n        break;\n      case 'lean_left':\n        _shape = 'lean_left';\n        break;\n      case 'trapezoid':\n        _shape = 'trapezoid';\n        break;\n      case 'inv_trapezoid':\n        _shape = 'inv_trapezoid';\n        break;\n      case 'odd_right':\n        _shape = 'rect_left_inv_arrow';\n        break;\n      case 'circle':\n        _shape = 'circle';\n        break;\n      case 'ellipse':\n        _shape = 'ellipse';\n        break;\n      case 'stadium':\n        _shape = 'stadium';\n        break;\n      case 'subroutine':\n        _shape = 'subroutine';\n        break;\n      case 'cylinder':\n        _shape = 'cylinder';\n        break;\n      case 'group':\n        _shape = 'rect';\n        break;\n      default:\n        _shape = 'rect';\n    }\n    // Add the node\n    log.warn('Adding node', vertex.id, vertex.domId);\n    g.setNode(diagObj.db.lookUpDomId(vertex.id), {\n      labelType: 'svg',\n      labelStyle: styles.labelStyle,\n      shape: _shape,\n      label: vertexNode,\n      rx: radious,\n      ry: radious,\n      class: classStr,\n      style: styles.style,\n      id: diagObj.db.lookUpDomId(vertex.id),\n    });\n  });\n};\n\n/**\n * Add edges to graph based on parsed graph definition\n *\n * @param {object} edges The edges to add to the graph\n * @param {object} g The graph object\n * @param diagObj\n */\nexport const addEdges = function (edges, g, diagObj) {\n  let cnt = 0;\n\n  let defaultStyle;\n  let defaultLabelStyle;\n\n  if (edges.defaultStyle !== undefined) {\n    const defaultStyles = getStylesFromArray(edges.defaultStyle);\n    defaultStyle = defaultStyles.style;\n    defaultLabelStyle = defaultStyles.labelStyle;\n  }\n\n  edges.forEach(function (edge) {\n    cnt++;\n\n    // Identify Link\n    var linkId = 'L-' + edge.start + '-' + edge.end;\n    var linkNameStart = 'LS-' + edge.start;\n    var linkNameEnd = 'LE-' + edge.end;\n\n    const edgeData = {};\n\n    // Set link type for rendering\n    if (edge.type === 'arrow_open') {\n      edgeData.arrowhead = 'none';\n    } else {\n      edgeData.arrowhead = 'normal';\n    }\n\n    let style = '';\n    let labelStyle = '';\n\n    if (edge.style !== undefined) {\n      const styles = getStylesFromArray(edge.style);\n      style = styles.style;\n      labelStyle = styles.labelStyle;\n    } else {\n      switch (edge.stroke) {\n        case 'normal':\n          style = 'fill:none';\n          if (defaultStyle !== undefined) {\n            style = defaultStyle;\n          }\n          if (defaultLabelStyle !== undefined) {\n            labelStyle = defaultLabelStyle;\n          }\n          break;\n        case 'dotted':\n          style = 'fill:none;stroke-width:2px;stroke-dasharray:3;';\n          break;\n        case 'thick':\n          style = ' stroke-width: 3.5px;fill:none';\n          break;\n      }\n    }\n\n    edgeData.style = style;\n    edgeData.labelStyle = labelStyle;\n\n    if (edge.interpolate !== undefined) {\n      edgeData.curve = interpolateToCurve(edge.interpolate, curveLinear);\n    } else if (edges.defaultInterpolate !== undefined) {\n      edgeData.curve = interpolateToCurve(edges.defaultInterpolate, curveLinear);\n    } else {\n      edgeData.curve = interpolateToCurve(conf.curve, curveLinear);\n    }\n\n    if (edge.text === undefined) {\n      if (edge.style !== undefined) {\n        edgeData.arrowheadStyle = 'fill: #333';\n      }\n    } else {\n      edgeData.arrowheadStyle = 'fill: #333';\n      edgeData.labelpos = 'c';\n\n      if (evaluate(getConfig().flowchart.htmlLabels)) {\n        edgeData.labelType = 'html';\n        edgeData.label = `<span id=\"L-${linkId}\" class=\"edgeLabel L-${linkNameStart}' L-${linkNameEnd}\" style=\"${\n          edgeData.labelStyle\n        }\">${edge.text.replace(\n          /fa[blrs]?:fa-[\\w-]+/g,\n          (s) => `<i class='${s.replace(':', ' ')}'></i>`\n        )}</span>`;\n      } else {\n        edgeData.labelType = 'text';\n        edgeData.label = edge.text.replace(common.lineBreakRegex, '\\n');\n\n        if (edge.style === undefined) {\n          edgeData.style = edgeData.style || 'stroke: #333; stroke-width: 1.5px;fill:none';\n        }\n\n        edgeData.labelStyle = edgeData.labelStyle.replace('color:', 'fill:');\n      }\n    }\n\n    edgeData.id = linkId;\n    edgeData.class = linkNameStart + ' ' + linkNameEnd;\n    edgeData.minlen = edge.length || 1;\n\n    // Add the edge to the graph\n    g.setEdge(diagObj.db.lookUpDomId(edge.start), diagObj.db.lookUpDomId(edge.end), edgeData, cnt);\n  });\n};\n\n/**\n * Returns the all the styles from classDef statements in the graph definition.\n *\n * @param text\n * @param diagObj\n * @returns {object} ClassDef styles\n */\nexport const getClasses = function (text, diagObj) {\n  log.info('Extracting classes');\n  diagObj.db.clear();\n  try {\n    // Parse the graph definition\n    diagObj.parse(text);\n    return diagObj.db.getClasses();\n  } catch (e) {\n    log.error(e);\n    return {};\n  }\n};\n\n/**\n * Draws a flowchart in the tag with id: id based on the graph definition in text.\n *\n * @param text\n * @param id\n * @param _version\n * @param diagObj\n */\nexport const draw = function (text, id, _version, diagObj) {\n  log.info('Drawing flowchart');\n  diagObj.db.clear();\n  const { securityLevel, flowchart: conf } = getConfig();\n  let sandboxElement;\n  if (securityLevel === 'sandbox') {\n    sandboxElement = select('#i' + id);\n  }\n  const root =\n    securityLevel === 'sandbox'\n      ? select(sandboxElement.nodes()[0].contentDocument.body)\n      : select('body');\n  const doc = securityLevel === 'sandbox' ? sandboxElement.nodes()[0].contentDocument : document;\n\n  // Parse the graph definition\n  try {\n    diagObj.parser.parse(text);\n  } catch (err) {\n    log.debug('Parsing failed');\n  }\n\n  // Fetch the default direction, use TD if none was found\n  let dir = diagObj.db.getDirection();\n  if (dir === undefined) {\n    dir = 'TD';\n  }\n  const nodeSpacing = conf.nodeSpacing || 50;\n  const rankSpacing = conf.rankSpacing || 50;\n\n  // Create the input mermaid.graph\n  const g = new graphlib.Graph({\n    multigraph: true,\n    compound: true,\n  })\n    .setGraph({\n      rankdir: dir,\n      nodesep: nodeSpacing,\n      ranksep: rankSpacing,\n      marginx: 8,\n      marginy: 8,\n    })\n    .setDefaultEdgeLabel(function () {\n      return {};\n    });\n\n  let subG;\n  const subGraphs = diagObj.db.getSubGraphs();\n  for (let i = subGraphs.length - 1; i >= 0; i--) {\n    subG = subGraphs[i];\n    diagObj.db.addVertex(subG.id, subG.title, 'group', undefined, subG.classes);\n  }\n\n  // Fetch the vertices/nodes and edges/links from the parsed graph definition\n  const vert = diagObj.db.getVertices();\n  log.warn('Get vertices', vert);\n\n  const edges = diagObj.db.getEdges();\n\n  let i = 0;\n  for (i = subGraphs.length - 1; i >= 0; i--) {\n    subG = subGraphs[i];\n\n    selectAll('cluster').append('text');\n\n    for (let j = 0; j < subG.nodes.length; j++) {\n      log.warn(\n        'Setting subgraph',\n        subG.nodes[j],\n        diagObj.db.lookUpDomId(subG.nodes[j]),\n        diagObj.db.lookUpDomId(subG.id)\n      );\n      g.setParent(diagObj.db.lookUpDomId(subG.nodes[j]), diagObj.db.lookUpDomId(subG.id));\n    }\n  }\n  addVertices(vert, g, id, root, doc, diagObj);\n  addEdges(edges, g, diagObj);\n\n  // Create the renderer\n  const render = new Render();\n\n  // Add custom shapes\n  flowChartShapes.addToRender(render);\n\n  // Add our custom arrow - an empty arrowhead\n  render.arrows().none = function normal(parent, id, edge, type) {\n    const marker = parent\n      .append('marker')\n      .attr('id', id)\n      .attr('viewBox', '0 0 10 10')\n      .attr('refX', 9)\n      .attr('refY', 5)\n      .attr('markerUnits', 'strokeWidth')\n      .attr('markerWidth', 8)\n      .attr('markerHeight', 6)\n      .attr('orient', 'auto');\n\n    const path = marker.append('path').attr('d', 'M 0 0 L 0 0 L 0 0 z');\n    applyStyle(path, edge[type + 'Style']);\n  };\n\n  // Override normal arrowhead defined in d3. Remove style & add class to allow css styling.\n  render.arrows().normal = function normal(parent, id) {\n    const marker = parent\n      .append('marker')\n      .attr('id', id)\n      .attr('viewBox', '0 0 10 10')\n      .attr('refX', 9)\n      .attr('refY', 5)\n      .attr('markerUnits', 'strokeWidth')\n      .attr('markerWidth', 8)\n      .attr('markerHeight', 6)\n      .attr('orient', 'auto');\n\n    marker\n      .append('path')\n      .attr('d', 'M 0 0 L 10 5 L 0 10 z')\n      .attr('class', 'arrowheadPath')\n      .style('stroke-width', 1)\n      .style('stroke-dasharray', '1,0');\n  };\n\n  // Set up an SVG group so that we can translate the final graph.\n  const svg = root.select(`[id=\"${id}\"]`);\n\n  // Run the renderer. This is what draws the final graph.\n  const element = root.select('#' + id + ' g');\n  render(element, g);\n\n  element.selectAll('g.node').attr('title', function () {\n    return diagObj.db.getTooltip(this.id);\n  });\n\n  // Index nodes\n  diagObj.db.indexNodes('subGraph' + i);\n\n  // reposition labels\n  for (i = 0; i < subGraphs.length; i++) {\n    subG = subGraphs[i];\n    if (subG.title !== 'undefined') {\n      const clusterRects = doc.querySelectorAll(\n        '#' + id + ' [id=\"' + diagObj.db.lookUpDomId(subG.id) + '\"] rect'\n      );\n      const clusterEl = doc.querySelectorAll(\n        '#' + id + ' [id=\"' + diagObj.db.lookUpDomId(subG.id) + '\"]'\n      );\n\n      const xPos = clusterRects[0].x.baseVal.value;\n      const yPos = clusterRects[0].y.baseVal.value;\n      const _width = clusterRects[0].width.baseVal.value;\n      const cluster = select(clusterEl[0]);\n      const te = cluster.select('.label');\n      te.attr('transform', `translate(${xPos + _width / 2}, ${yPos + 14})`);\n      te.attr('id', id + 'Text');\n\n      for (let j = 0; j < subG.classes.length; j++) {\n        clusterEl[0].classList.add(subG.classes[j]);\n      }\n    }\n  }\n\n  // Add label rects for non html labels\n  if (!conf.htmlLabels) {\n    const labels = doc.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n    for (const label of labels) {\n      // Get dimensions of label\n      const dim = label.getBBox();\n\n      const rect = doc.createElementNS('http://www.w3.org/2000/svg', 'rect');\n      rect.setAttribute('rx', 0);\n      rect.setAttribute('ry', 0);\n      rect.setAttribute('width', dim.width);\n      rect.setAttribute('height', dim.height);\n      // rect.setAttribute('style', 'fill:#e8e8e8;');\n\n      label.insertBefore(rect, label.firstChild);\n    }\n  }\n  setupGraphViewbox(g, svg, conf.diagramPadding, conf.useMaxWidth);\n\n  // If node has a link, wrap it in an anchor SVG object.\n  const keys = Object.keys(vert);\n  keys.forEach(function (key) {\n    const vertex = vert[key];\n\n    if (vertex.link) {\n      const node = root.select('#' + id + ' [id=\"' + diagObj.db.lookUpDomId(key) + '\"]');\n      if (node) {\n        const link = doc.createElementNS('http://www.w3.org/2000/svg', 'a');\n        link.setAttributeNS('http://www.w3.org/2000/svg', 'class', vertex.classes.join(' '));\n        link.setAttributeNS('http://www.w3.org/2000/svg', 'href', vertex.link);\n        link.setAttributeNS('http://www.w3.org/2000/svg', 'rel', 'noopener');\n        if (securityLevel === 'sandbox') {\n          link.setAttributeNS('http://www.w3.org/2000/svg', 'target', '_top');\n        } else if (vertex.linkTarget) {\n          link.setAttributeNS('http://www.w3.org/2000/svg', 'target', vertex.linkTarget);\n        }\n\n        const linkNode = node.insert(function () {\n          return link;\n        }, ':first-child');\n\n        const shape = node.select('.label-container');\n        if (shape) {\n          linkNode.append(function () {\n            return shape.node();\n          });\n        }\n\n        const label = node.select('.label');\n        if (label) {\n          linkNode.append(function () {\n            return label.node();\n          });\n        }\n      }\n    }\n  });\n};\n\nexport default {\n  setConf,\n  addVertices,\n  addEdges,\n  getClasses,\n  draw,\n};\n", "// @ts-ignore: TODO Fix ts errors\nimport flowParser from './parser/flow';\nimport flowDb from './flowDb';\nimport flowRenderer from './flowRenderer';\nimport flowRendererV2 from './flowRenderer-v2';\nimport flowStyles from './styles';\nimport { MermaidConfig } from '../../config.type';\n\nexport const diagram = {\n  parser: flowParser,\n  db: flowDb,\n  renderer: flowRendererV2,\n  styles: flowStyles,\n  init: (cnf: MermaidConfig) => {\n    if (!cnf.flowchart) {\n      cnf.flowchart = {};\n    }\n    // TODO, broken as of 2022-09-14 (13809b50251845475e6dca65cc395761be38fbd2)\n    cnf.flowchart.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    flowRenderer.setConf(cnf.flowchart);\n    flowDb.clear();\n    flowDb.setGen('gen-1');\n  },\n};\n"],
  "mappings": "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",
  "names": ["responseText", "response", "text", "input", "init", "parser", "type", "svg", "arrows", "normal", "vee", "undirected", "setArrows", "value", "parent", "id", "edge", "marker", "path", "util.applyStyle", "addSVGLabel", "root", "node", "domNode", "addTextLabel", "lines", "processEscapeSequences", "i", "newText", "escaped", "ch", "addLabel", "location", "label", "labelSvg", "addHtmlLabel", "labelBBox", "y", "createClusters", "selection", "g", "clusters", "v", "util.isSubgraph", "svgClusters", "util.applyTransition", "enterSelection", "thisGroup", "d3.select", "labelGroup", "c", "domCluster", "setCreateClusters", "createEdgeLabels", "svgEdgeLabels", "e", "util.edgeToId", "bbox", "_.has", "exitSelection", "setCreateEdgeLabels", "intersectNode", "point", "createEdgePaths", "previousPaths", "newPaths", "enter", "exit", "svgPaths", "domEdge", "util.applyClass", "_.uniqueId", "d3\n      .select", "makeFragmentRef", "calcPoints", "arrowhead", "setCreateEdgePaths", "url", "fragmentId", "baseUrl", "tail", "head", "points", "createLine", "line", "d3.line", "d3.svg", "d", "getCoords", "elem", "matrix", "svgPathsEnter", "sourceElem", "_.range", "svgPathExit", "createNodes", "shapes", "simpleNodes", "svgNodes", "labelDom", "shape", "_.pick", "shapeSvg", "shapeBBox", "setCreateNodes", "positionClusters", "created", "translate", "util\n    .applyTransition", "positionEdgeLabels", "positionNodes", "intersectEllipse", "rx", "ry", "cx", "cy", "px", "py", "det", "dx", "dy", "intersectCircle", "intersectLine", "p1", "p2", "q1", "q2", "a1", "a2", "b1", "b2", "c1", "c2", "r1", "r2", "r3", "r4", "denom", "offset", "num", "x", "sameSign", "intersectPolygon", "polyPoints", "x1", "y1", "intersections", "minX", "minY", "entry", "left", "top", "intersect", "q", "pdx", "pdy", "distp", "qdx", "qdy", "distq", "intersectRect", "w", "h", "sx", "sy", "rect", "ellipse", "circle", "diamond", "setShapes", "r", "p", "render", "fn", "preProcessGraph", "outputGroup", "createOrSelectGroup", "clustersGroup", "edgePathsGroup", "edgeLabels", "nodes", "layout", "postProcessGraph", "NODE_DEFAULT_ATTRS", "EDGE_DEFAULT_ATTRS", "d3.curveLinear", "_.defaults", "_.each", "k", "name", "question", "insertPolygonShape", "hexagon", "m", "rect_left_inv_arrow", "lean_right", "lean_left", "trapezoid", "inv_trapezoid", "rect_right_inv_arrow", "stadium", "subroutine", "cylinder", "pos", "addToRender", "addToRenderV2", "addShape", "flowChartShapes", "conf", "setConf", "cnf", "keys", "key", "addVertices", "vert", "svgId", "_doc", "diagObj", "select", "doc", "vertex", "classStr", "styles", "getStylesFromArray", "vertexText", "vertexNode", "evaluate", "getConfig", "s", "svgLabel", "rows", "common", "row", "tspan", "radious", "_shape", "log", "addEdges", "edges", "cnt", "defaultStyle", "defaultLabelStyle", "defaultStyles", "linkId", "linkNameStart", "linkNameEnd", "edgeData", "style", "labelStyle", "interpolateToCurve", "curveLinear", "getClasses", "draw", "_version", "securityLevel", "sandboxElement", "dir", "nodeSpacing", "rankSpacing", "graphlib.Graph", "subG", "subGraphs", "selectAll", "j", "Render", "applyStyle", "element", "clusterRects", "clusterEl", "xPos", "yPos", "_width", "te", "labels", "dim", "setupGraphViewbox", "link", "linkNode", "flowRenderer", "diagram", "flowParser", "flowDb", "flowRendererV2", "flowStyles"]
}
