import * as vue from 'vue';
import { DefineComponent, Plugin } from 'vue';

interface StarportOptions {
    /**
     * The duration of the animation in milliseconds.
     * @default 600
     */
    duration?: number;
    /**
     * Easing function to use.
     * @see https://easings.net/
     * @default 'cubic-bezier(0.45, 0, 0.55, 1)'
     */
    easing?: string;
    /**
     * Should keep the component alive if no proxy is presented
     *
     * @default false
     */
    keepAlive?: boolean;
}
declare type ResolvedStarportOptions = Required<StarportOptions>;
interface StarportCraftProps {
    /**
     * The id of the starport instance across routes
     */
    port: string;
}
interface StarportProxyProps extends StarportOptions, StarportCraftProps {
}
interface StarportProps extends StarportProxyProps {
    /**
     * Props that apply to the proxy when it is mounted.
     */
    mountedProps?: Record<string, any>;
    /**
     * Props that apply to the proxy before it is mounted.
     */
    initialProps?: Record<string, any>;
}

/**
 * The proxy component wrapper for the Starport.
 */
declare const Starport: DefineComponent<StarportProps, {}, {}, vue.ComputedOptions, vue.MethodOptions, vue.ComponentOptionsMixin, vue.ComponentOptionsMixin, {}, string, vue.VNodeProps & vue.AllowedComponentProps & vue.ComponentCustomProps, Readonly<StarportProps>, {}>;

/**
 * The carrier component for all the flying Starport components
 * Should be initialized in App.vue only once.
 */
declare const StarportCarrier: DefineComponent<{}, {}, {}, vue.ComputedOptions, vue.MethodOptions, vue.ComponentOptionsMixin, vue.ComponentOptionsMixin, {}, string, vue.VNodeProps & vue.AllowedComponentProps & vue.ComponentCustomProps, Readonly<vue.ExtractPropTypes<{}>>, {}>;

declare function StarportPlugin(defaultOptions?: StarportOptions): Plugin;

export { ResolvedStarportOptions, Starport, StarportCarrier, StarportCraftProps, StarportOptions, StarportProps, StarportProxyProps, StarportPlugin as default };
