{"version":3,"file":"line-05ccbb85.js","sources":["../../../node_modules/.pnpm/d3-shape@3.1.0/node_modules/d3-shape/src/point.js","../../../node_modules/.pnpm/d3-shape@3.1.0/node_modules/d3-shape/src/line.js"],"sourcesContent":["export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x, y) {\n  var defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  x = typeof x === \"function\" ? x : (x === undefined) ? pointX : constant(x);\n  y = typeof y === \"function\" ? y : (y === undefined) ? pointY : constant(y);\n\n  function line(data) {\n    var i,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n"],"names":["x","p","line","y","defined","constant","context","curve","curveLinear","output","pointX","pointY","data","i","n","array","d","defined0","buffer","path","_"],"mappings":";;;AAAO,SAASA,EAAEC,GAAG;AACnB,SAAOA,EAAE,CAAC;AACZ;AAEO,SAAS,EAAEA,GAAG;AACnB,SAAOA,EAAE,CAAC;AACZ;ACAe,SAAAC,EAASF,GAAGG,GAAG;AAC5B,MAAIC,IAAUC,EAAS,EAAI,GACvBC,IAAU,MACVC,IAAQC,GACRC,IAAS;AAEbT,EAAAA,IAAI,OAAOA,KAAM,aAAaA,IAAKA,MAAM,SAAaU,IAASL,EAASL,CAAC,GACzEG,IAAI,OAAOA,KAAM,aAAaA,IAAKA,MAAM,SAAaQ,IAASN,EAASF,CAAC;AAEzE,WAASD,EAAKU,GAAM;AAClB,QAAIC,GACAC,KAAKF,IAAOG,EAAMH,CAAI,GAAG,QACzBI,GACAC,IAAW,IACXC;AAIJ,SAFIZ,KAAW,SAAMG,IAASF,EAAMW,IAASC,EAAI,CAAE,IAE9CN,IAAI,GAAGA,KAAKC,GAAG,EAAED;AACpB,MAAI,EAAEA,IAAIC,KAAKV,EAAQY,IAAIJ,EAAKC,CAAC,GAAGA,GAAGD,CAAI,OAAOK,OAC5CA,IAAW,CAACA,KAAUR,EAAO,UAAS,IACrCA,EAAO,QAAO,IAEjBQ,KAAUR,EAAO,MAAM,CAACT,EAAEgB,GAAGH,GAAGD,CAAI,GAAG,CAACT,EAAEa,GAAGH,GAAGD,CAAI,CAAC;AAG3D,QAAIM;AAAQ,aAAOT,IAAS,MAAMS,IAAS,MAAM;AAAA,EAClD;AAED,SAAAhB,EAAK,IAAI,SAASkB,GAAG;AACnB,WAAO,UAAU,UAAUpB,IAAI,OAAOoB,KAAM,aAAaA,IAAIf,EAAS,CAACe,CAAC,GAAGlB,KAAQF;AAAAA,EACvF,GAEEE,EAAK,IAAI,SAASkB,GAAG;AACnB,WAAO,UAAU,UAAUjB,IAAI,OAAOiB,KAAM,aAAaA,IAAIf,EAAS,CAACe,CAAC,GAAGlB,KAAQC;AAAAA,EACvF,GAEED,EAAK,UAAU,SAASkB,GAAG;AACzB,WAAO,UAAU,UAAUhB,IAAU,OAAOgB,KAAM,aAAaA,IAAIf,EAAS,CAAC,CAACe,CAAC,GAAGlB,KAAQE;AAAA,EAC9F,GAEEF,EAAK,QAAQ,SAASkB,GAAG;AACvB,WAAO,UAAU,UAAUb,IAAQa,GAAGd,KAAW,SAASG,IAASF,EAAMD,CAAO,IAAIJ,KAAQK;AAAA,EAChG,GAEEL,EAAK,UAAU,SAASkB,GAAG;AACzB,WAAO,UAAU,UAAUA,KAAK,OAAOd,IAAUG,IAAS,OAAOA,IAASF,EAAMD,IAAUc,CAAC,GAAGlB,KAAQI;AAAA,EAC1G,GAESJ;AACT;"}