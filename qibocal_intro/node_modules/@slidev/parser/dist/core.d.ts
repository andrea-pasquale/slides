import { SlidevConfig, SlidevThemeMeta, FontOptions, ResolvedFontOptions, SlidevMarkdown, SlideInfoBase, SlidevFeatureFlags, SlidevPreparserExtension, PreparserExtensionFromHeadmatter } from '@slidev/types';

/**
 * 1,3-5,8 => [1, 3, 4, 5, 8]
 */
declare function parseRangeString(total: number, rangeStr?: string): number[];
/**
 * Accepts `16/9` `1:1` `3x4`
 */
declare function parseAspectRatio(str: string | number): number;

declare function getDefaultConfig(): SlidevConfig;
declare function resolveConfig(headmatter: any, themeMeta?: SlidevThemeMeta, filepath?: string, verify?: boolean): SlidevConfig;
declare function verifyConfig(config: SlidevConfig, themeMeta?: SlidevThemeMeta, warn?: (v: string) => void): void;
declare function resolveFonts(fonts?: FontOptions): ResolvedFontOptions;

declare function stringify(data: SlidevMarkdown): string;
declare function filterDisabled(data: SlidevMarkdown): SlidevMarkdown;
declare function stringifySlide(data: SlideInfoBase, idx?: number): string;
declare function prettifySlide(data: SlideInfoBase): SlideInfoBase;
declare function prettify(data: SlidevMarkdown): SlidevMarkdown;
declare function detectFeatures(code: string): SlidevFeatureFlags;
declare function parseSlide(raw: string): SlideInfoBase;
declare function parse(markdown: string, filepath?: string, themeMeta?: SlidevThemeMeta, extensions?: SlidevPreparserExtension[], onHeadmatter?: PreparserExtensionFromHeadmatter): Promise<SlidevMarkdown>;
declare function mergeFeatureFlags(a: SlidevFeatureFlags, b: SlidevFeatureFlags): SlidevFeatureFlags;
declare function scanMonacoModules(md: string): string[];

export { detectFeatures, filterDisabled, getDefaultConfig, mergeFeatureFlags, parse, parseAspectRatio, parseRangeString, parseSlide, prettify, prettifySlide, resolveConfig, resolveFonts, scanMonacoModules, stringify, stringifySlide, verifyConfig };
