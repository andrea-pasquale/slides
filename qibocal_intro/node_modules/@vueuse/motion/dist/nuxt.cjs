'use strict';

const kit = require('@nuxt/kit');

const DEFAULTS = {};
const CONFIG_KEY = "motion";
const module$1 = kit.defineNuxtModule({
  meta: {
    name: "@vueuse/motion",
    configKey: CONFIG_KEY
  },
  defaults: DEFAULTS,
  setup(options, nuxt) {
    const { resolve } = kit.createResolver((typeof document === 'undefined' ? new (require('u' + 'rl').URL)('file:' + __filename).href : (document.currentScript && document.currentScript.src || new URL('nuxt.cjs', document.baseURI).href)));
    const resolveRuntimeModule = (path) => kit.resolveModule(path, { paths: resolve("./runtime") });
    nuxt.options.runtimeConfig.public.motion = options;
    kit.addPlugin({
      src: resolveRuntimeModule("./templates/motion.js")
    });
    if (!nuxt.options.build.transpile)
      nuxt.options.build.transpile = [];
    const transpileList = ["defu", "@vueuse/motion", "@vueuse/shared", "@vueuse/core"];
    transpileList.forEach((pkgName) => {
      if (!nuxt.options.build.transpile.includes(pkgName))
        nuxt.options.build.transpile.push(pkgName);
    });
    if (!nuxt.options.alias)
      nuxt.options.alias = {};
    if (!nuxt.options.alias.tslib)
      nuxt.options.alias.tslib = "tslib/tslib.es6.js";
    kit.addImportsDir(resolve("./composables/"));
  }
});

module.exports = module$1;
